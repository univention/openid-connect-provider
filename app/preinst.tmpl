#!/bin/bash

set -euo pipefail

eval $(ucr shell)

set -x

# test if docker container is configured to read-only from early app versions.
# remove setting from UCRv
if ucr get appcenter/apps/openid-connect-provider/docker/params | grep -q read-only; then
	ucr set appcenter/apps/openid-connect-provider/docker/params="${appcenter_apps_openid_connect_provider_docker_params/--read-only/}"
fi

# kopano konnect should run as user nobody
KOPANOUID=$(id -u nobody)
KOPANOGID=$(id -g nobody)

mkdir -p /etc/kopano/
# make sure a valid directory for temporary files for openssl is provided
export RANDFILE=/etc/kopano/.rnd

# create encryption key if not already present
if [ ! -f /etc/kopano/konnectd-encryption-secret.key ]; then
	echo "creating new encryption key"
	openssl rand -out /etc/kopano/konnectd-encryption-secret.key 32
fi

# create token signing key if not already present
if [ ! -f /etc/kopano/konnectd-signing-private-key.pem ]; then
	echo "creating new token signing key"
	openssl genpkey -algorithm RSA -out /etc/kopano/konnectd-signing-private-key.pem -pkeyopt rsa_keygen_bits:4096
fi
chown $KOPANOUID:$KOPANOGID /etc/kopano/konnectd-signing-private-key.pem

# Add preliminary LDAP credentials if not existing
# Using docker host credentials here
# Credentials are replaced with the apps machine account in joinscript
if [ ! -f /etc/kopano/konnectd.ldap_binddn -o ! -f /etc/kopano/konnectd.machine.secret ]; then
	echo "Configuring LDAP credentials"
	echo -n "$(ucr get ldap/hostdn)" > /etc/kopano/konnectd.ldap_binddn
	cat /etc/machine.secret > /etc/kopano/konnectd.machine.secret
	chown "$KOPANOUID":"$KOPANOGID" /etc/kopano/konnectd.ldap_binddn /etc/kopano/konnectd.machine.secret
fi

touch /etc/kopano/konnectd-identifier-scopes.yaml

# rename in update to app version 2+; will be recreated below with new filename + layout, listener resync happens in joinscript
if [ -e /etc/kopano/identifier-registration.yaml ]; then
	rm /etc/kopano/identifier-registration.yaml
fi

if [ ! -f /etc/kopano/konnectd-identifier-registration.yaml ]; then
	echo "creating template client registration"
	touch /etc/kopano/konnectd-identifier-registration.yaml
	chmod 750 /etc/kopano/konnectd-identifier-registration.yaml
	chown root:$KOPANOGID /etc/kopano/konnectd-identifier-registration.yaml
	cat << EOF >"/etc/kopano/konnectd-identifier-registration.yaml"
%OIDC_PROVIDER_CONFIG_TEMPLATE%
EOF
fi

echo "setting process of container to the id of the kopano or nobody user"
ucr set appcenter/apps/openid-connect-provider/docker/params="--user=$KOPANOUID:$KOPANOGID"

if [ ! -f /etc/kopano/konnectd.cfg ]; then
	echo "creating konnectd.cfg"
	touch /etc/kopano/konnectd.cfg
	chmod 750 /etc/kopano/konnectd.cfg
	chown root:$KOPANOGID /etc/kopano/konnectd.cfg
	cat << EOF >"/etc/kopano/konnectd.cfg"
oidc_issuer_identifier=https://$ucs_server_sso_fqdn
allow_dynamic_client_registration=no
EOF
fi
