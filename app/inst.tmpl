#!/bin/bash

VERSION=4
SERVICE="Kopano-Konnect"

. /usr/share/univention-join/joinscripthelper.lib
. /usr/share/univention-appcenter/joinscripthelper.sh
. /usr/share/univention-lib/ldap.sh
. /usr/share/univention-lib/base.sh

joinscript_init
eval "$(ucr shell)"

# get numerical user and group id of the kopano user
if id kopano >/dev/null 2>&1; then
	KOPANOUID=$(id -u kopano)
	KOPANOGID=$(id -g kopano)
else
	KOPANOUID=$(id -u nobody)
	KOPANOGID=$(id -g nobody)
fi

a2enmod rewrite proxy proxy_http || die

CONFIG="$(joinscript_container_file /etc/univention/base.conf)"

ucs_addServiceToLocalhost "${SERVICE}" "$@"

univention-directory-manager container/cn create "$@" --ignore_exists \
    --position="cn=univention,$ldap_base" \
    --set name="oidc" \
    --set description="OpenID Connect service definitions" || die


# apache2 config
cat << EOF >/etc/apache2/conf-available/openid-connect-provider.conf
%OIDC_PROVIDER_APACHE_CONF%
EOF

if [ "$server_role" == "domaincontroller_master" -o "$server_role" == "domaincontroller_backup" ]; then
	# Make provider available at https://ucs-sso.<domain> vhost on DC Master and Backup
	ln -sf /etc/apache2/conf-available/openid-connect-provider.conf /etc/apache2/sso-vhost.conf.d/openid-connect-provider.conf
else
	# Make provider available at https://$hostname.$domainname vhost on other roles
	ln -sf /etc/apache2/conf-available/openid-connect-provider.conf /etc/apache2/ucs-sites.conf.d/openid-connect-provider.conf
fi

invoke-rc.d apache2 reload

mkdir -p /usr/share/univention-openid-connect-provider || die

# listener module
cat << EOF >/usr/share/univention-openid-connect-provider/openid-connect-provider-listener.py
%OIDC_PROVIDER_LISTENER%
EOF

cp /usr/share/univention-openid-connect-provider/openid-connect-provider-listener.py \
	/usr/lib/univention-directory-listener/system/

# configure udm module
cat << EOF >/usr/share/univention-openid-connect-provider/openid-connect-provider-udm-module.py
%OIDC_PROVIDER_UDM_MODULE%
EOF

# LDAP Schema
cat << EOF >"/usr/share/univention-openid-connect-provider/openid-connect-provider.schema"
%OIDC_PROVIDER_SCHEMA%
EOF

# LDAP ACL
cat << EOF >"/usr/share/univention-openid-connect-provider/58openid-connect-provider.ldapacl"
%OIDC_PROVIDER_ACL%
EOF

ucs_registerLDAPExtension "$@" \
	--packagename openid-connect-provider \
	--packageversion 0.1 \
	--schema /usr/share/univention-openid-connect-provider/openid-connect-provider.schema \
	--udm_module /usr/share/univention-openid-connect-provider/openid-connect-provider-udm-module.py \
	--acl /usr/share/univention-openid-connect-provider/58openid-connect-provider.ldapacl || die

if [ $JS_LAST_EXECUTED_VERSION -lt 3 -a $JS_LAST_EXECUTED_VERSION -gt 0 ]; then
	rm /usr/share/univention-openid-connect-provider/66openid-connect-provider.ldapacl
	ucs_unregisterLDAPExtension "$@" --acl 66openid-connect-provider.ldapacl || die
fi

if [ $JS_LAST_EXECUTED_VERSION -lt 4 -a $JS_LAST_EXECUTED_VERSION -gt 0 ]; then
	# in app update to version 2+ the filename and layout of file written to by listener
	# changed - resync it here to have listener write to new file
	univention-directory-listener-ctrl resync openid-connect-provider
fi

# SAML Service provider object, required for SAML SSO Login into OIDC Provider
if ! udm saml/serviceprovider list --filter SAMLServiceProviderIdentifier=openid-connect-provider | grep -q "DN:"; then
	# if serviceprovider object does not exist (new installation), create it
	udm saml/serviceprovider create "$@" \
		--ignore_exists \
		--position "cn=saml-serviceprovider,cn=univention,$ldap_base" \
		--set isActivated=TRUE \
		--set Identifier="openid-connect-provider" \
		--set AssertionConsumerService="${oidc_konnectd_issuer_identifier}/signin/v1/identifier/saml2/acs" \
		--set singleLogoutService="${oidc_konnectd_issuer_identifier}/signin/v1/identifier/_/saml2/slo" \
		--set NameIDFormat="urn:oasis:names:tc:SAML:2.0:nameid-format:transient" \
		--set simplesamlNameIDAttribute="uid" \
		--set simplesamlAttributes=TRUE \
		--set LDAPattributes="uid" \
		--set attributesNameFormat=urn:oasis:names:tc:SAML:2.0:attrname-format:basic || die
else
	# if object exists, modify ACS and SLO url
	# usecase: app setting for oidc_konnectd_issuer_identifier did change
	udm saml/serviceprovider modify "$@" \
		--dn "SAMLServiceProviderIdentifier=openid-connect-provider,cn=saml-serviceprovider,cn=univention,$ldap_base" \
		--set AssertionConsumerService="${oidc_konnectd_issuer_identifier}/signin/v1/identifier/saml2/acs" \
		--set singleLogoutService="${oidc_konnectd_issuer_identifier}/signin/v1/identifier/_/saml2/slo" || die
fi

# Update Container LDAP credentials
echo -n "$(ucr get appcenter/apps/openid-connect-provider/hostdn)" > /etc/kopano/konnectd.ldap_binddn
docker cp "$(ucr get appcenter/apps/openid-connect-provider/container)":/etc/machine.secret /etc/kopano/konnectd.machine.secret
chown "$KOPANOUID":"$KOPANOGID" /etc/kopano/konnectd.ldap_binddn /etc/kopano/konnectd.machine.secret

# Set issuer identifier if not already configured
if ! univention-app shell openid-connect-provider grep "oidc/konnectd/issuer_identifier: " /etc/univention/base.conf > /dev/null; then
	if [ "$server_role" == "domaincontroller_master" -o "$server_role" == "domaincontroller_backup" ]; then
		# use sso vhost on DC Master and Backup
		univention-app configure openid-connect-provider --set oidc/konnectd/issuer_identifier="https://$(ucr get ucs/server/sso/fqdn)"
	else
		# use local hostname on other roles
		univention-app configure openid-connect-provider --set oidc/konnectd/issuer_identifier="https://$hostname.$domainname"
	fi
fi

service univention-directory-listener restart || die
service docker-app-openid-connect-provider restart || die

joinscript_save_current_version
exit 0
