#!/usr/bin/python3

import os.path
import os
import sys
import yaml

base_conf = "/etc/univention/base.conf"
identifier_registration_file = "/etc/kopano/konnectd-identifier-registration.yaml"
konnectd_cfg = "/etc/kopano/konnectd.cfg"

cfg_mapping = {
	"oidc_konnectd_issuer_identifier": "oidc_issuer_identifier",
}

print("configuration script running...")

if not os.path.isfile(base_conf):
	print("base.conf does not exist, exiting")
	sys.exit(1)

with open(base_conf) as f, open(konnectd_cfg, "w+") as cfgfile:
	cfgfile.write("# WARNING: this file is maintained by univention-directory-listener, manual changes will be overwritten\n")

	for line in f:
		keyvalue = line.split(": ", 1)
		if len(keyvalue) < 2:
			continue
		keyvalue[0] = keyvalue[0].replace("/", "_")
		# Part 1: write /etc/kopano/konnectd-identifier-registration.yaml
		if keyvalue[0] == "oidc_konnectd_saml2_metadata_url":
			filecontent = []
			with open(identifier_registration_file, "rb") as irf:
				filecontent = yaml.safe_load(irf)
				for authority in filecontent["authorities"]:
					if authority["id"] == "univention":
						authority["metadata_endpoint"] = keyvalue[1].strip()

			with open(identifier_registration_file, "w") as irf:
				yaml.safe_dump(filecontent, irf, default_flow_style=False)
			continue

		# Part 2: write /etc/kopano/konnectd.cfg
		if keyvalue[0].startswith("oidc_konnectd_"):
			cfgkey = ""
			if keyvalue[0] in cfg_mapping:
				# some keys map to a specific value in the cfg
				cfgkey = cfg_mapping[keyvalue[0]]
			else:
				# while most should be fine when just cutting of the leading from the ucr key
				cfgkey = keyvalue[0].replace("oidc_konnectd_", "", 1)

			# some value are binary / checkboxes. entrypoint script expects 'yes' in that case
			cfgvalue = keyvalue[1].strip()
			if cfgvalue.lower() in ('yes', 'true', '1', 'enable', 'enabled', 'on'):
				cfgvalue = "yes"

			cfgfile.write("%s=%s\n" % (cfgkey, cfgvalue))

sys.exit(0)
